/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Service as PrismaService } from "@prisma/client";

export class ServiceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ServiceCountArgs, "select">): Promise<number> {
    return this.prisma.service.count(args);
  }

  async services(args: Prisma.ServiceFindManyArgs): Promise<PrismaService[]> {
    return this.prisma.service.findMany(args);
  }
  async service(
    args: Prisma.ServiceFindUniqueArgs
  ): Promise<PrismaService | null> {
    return this.prisma.service.findUnique(args);
  }
  async createService(args: Prisma.ServiceCreateArgs): Promise<PrismaService> {
    return this.prisma.service.create(args);
  }
  async updateService(args: Prisma.ServiceUpdateArgs): Promise<PrismaService> {
    return this.prisma.service.update(args);
  }
  async deleteService(args: Prisma.ServiceDeleteArgs): Promise<PrismaService> {
    return this.prisma.service.delete(args);
  }
}
